name: Comment driven automations
on:
  issue_comment:
    types: [ created ]

jobs:
  comment-driven-automation:
    if: github.event.pull_request.user.login == 'trask'

    runs-on: ubuntu-latest
    steps:
      - name: Get command
        env:
          BODY: ${{ github.event.comment.body }}
        run: |
          # intentionally only looking at the first line of the body
          command=$(echo "$BODY" | head -1 | sed "s;^/;;")
          echo "COMMAND=$command" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - name: Check out PR branch
        if: |
          env.COMMAND == 'spotless' ||
          env.COMMAND == 'license' ||
          env.COMMAND == 'lockfile'
        env:
          NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr checkout $NUMBER

      - name: Set up Gradle cache
        if: |
          env.COMMAND == 'spotless' ||
          env.COMMAND == 'license' ||
          env.COMMAND == 'lockfile'
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: true

      - name: Set git user
        if: |
          env.COMMAND == 'spotless' ||
          env.COMMAND == 'license' ||
          env.COMMAND == 'lockfile'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-action[bot]@users.noreply.github.com

      - name: Run command
        env:
          NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          available_commands="Available commands:
            * \`/spotless\` - runs \`./gradlew spotlessApply\`
            * \`/license\` - runs \`./gradlew generateLicenseReport\`
            * \`/lockfile\` - runs \`./gradlew resolveAndLockAll --write-locks\`
            * \`/help\` - displays available commands
          "
          # TODO add thumbs up on triggering comment
          if [[ "$COMMAND" == "spotless" ]]; then
            ./gradlew spotlessApply
            if git diff --quiet; then
              gh pr comment $NUMBER --body "Already up-to-date"
              exit 0 # success
            fi
            git commit -a -m "./gradlew spotlessApply"
            git push
          elif [[ "$COMMAND" == "license" ]]; then
            ./gradlew generateLicenseReport
            git add licenses
            # there's always going to one line difference due to the timestamp included in the report
            if [[ $(git diff --cached --shortstat licenses) == " 1 file changed, 1 insertion(+), 1 deletion(-)" ]]
            then
              gh pr comment $NUMBER --body "Already up-to-date"
              exit 0 # success
            fi
            git commit -m "./gradlew generateLicenseReport"
            git push
          elif [[ "$COMMAND" == "lockfile" ]]; then
            ./gradlew resolveAndLockAll --write-locks
            git add "*.lockfile"
            if git diff --cached --quiet; then
              gh pr comment $NUMBER --body "Already up-to-date"
              exit 0 # success
            fi
            git commit -m "./gradlew resolveAndLockAll --write-locks"
            git push
          elif [[ "$COMMAND" == "help" ]]; then
            gh pr comment $NUMBER --body "$available_commands"
          else
            body="Unknown command: \`$COMMAND\`

            $available_commands
            "
            gh pr comment $NUMBER --body "$body"
          fi
